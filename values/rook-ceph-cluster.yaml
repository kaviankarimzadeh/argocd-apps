toolbox:
  enabled: false

cephClusterSpec:
  dashboard:
    enabled: true
    ssl: false
  resources:
    mgr:
      limits:
        memory: "1Gi"
      requests:
        cpu: "100m"
        memory: "512Mi"
    mon:
      limits:
        memory: "2Gi"
      requests:
        cpu: "100m"
        memory: "512Mi"
    osd:
      limits:
        memory: "4Gi"
      requests:
        cpu: "100m"
        memory: "512Mi"
  storage:
    useAllNodes: false
    useAllDevices: false
    nodes:
      - name: "kube-worker0"
        deviceFilter: ^(?!sda).* #everything except sda
      - name: "kube-worker1"
        deviceFilter: ^(?!sda).* #everything except sda
      - name: "kube-worker2"
        deviceFilter: ^(?!sda).* #everything except sda

ingress:
  dashboard:
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      # nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
      # nginx.ingress.kubernetes.io/server-snippet: |
      #   proxy_ssl_verify off;
    host:
      name: rook-ceph.kkloud.online
      path: "/"
    tls:
    - hosts:
        - rook-ceph.kkloud.online
      secretName: rook-ceph-tls
    ingressClassName: nginx

cephFileSystems:
  - name: ceph-filesystem
    spec:
      metadataPool:
        replicated:
          size: 3
      dataPools:
        - failureDomain: host
          replicated:
            size: 3
          name: data0
      metadataServer:
        activeCount: 1
        activeStandby: true
        resources:
          limits:
            memory: "4Gi"
          requests:
            cpu: "100m"
            memory: "1Gi"
        priorityClassName: system-cluster-critical
    storageClass:
      enabled: true
      isDefault: false
      name: ceph-filesystem
      pool: data0
      reclaimPolicy: Delete
      allowVolumeExpansion: true
      volumeBindingMode: "Immediate"
      annotations: { }
      labels: { }
      mountOptions: []
      parameters:
        csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
        csi.storage.k8s.io/provisioner-secret-namespace: "{{ .Release.Namespace }}"
        csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
        csi.storage.k8s.io/controller-expand-secret-namespace: "{{ .Release.Namespace }}"
        csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
        csi.storage.k8s.io/node-stage-secret-namespace: "{{ .Release.Namespace }}"
        csi.storage.k8s.io/fstype: ext4