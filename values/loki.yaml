#https://grafana.com/docs/loki/latest/get-started/deployment-modes/
deploymentMode: SimpleScalable #up to a about 1TB/day.

loki:
  auth_enabled: false

  storage:
    bucketNames:
      chunks: loki-chunks
      ruler: loki-ruler
    type: s3
    s3:
      s3: null
      endpoint: minio.minio:9000
      secretAccessKey: ${SECRET_ACCESS_KEY}
      accessKeyId: ${ACCESS_KEY_ID}
      s3ForcePathStyle: true
      insecure: true

  storage_config:
    tsdb_shipper:  #https://grafana.com/docs/loki/latest/configure/#storage_config
      active_index_directory: /var/loki/tsdb-index
      cache_location: /var/loki/tsdb-cache
      index_gateway_client:
        server_address: '{{ include "loki.indexGatewayAddress" . }}'
        log_gateway_requests: true

  schemaConfig: #https://grafana.com/docs/loki/latest/operations/storage/schema/
    configs:
      - from: 2024-12-17
        object_store: s3
        store: tsdb #https://grafana.com/docs/loki/latest/setup/migrate/migrate-to-tsdb/
        schema: v13
        index:
          prefix: index_
          period: 24h
  ingester:
    chunk_encoding: snappy
    max_chunk_age: "5m" # default is 2h

  limits_config:
    ingestion_rate_mb: 10000
    ingestion_burst_size_mb: 4096
    # allow_structured_metadata: false
    retention_period: "2d"

  tracing:
    enabled: true

  analytics:
      reporting_enabled: false


gateway:
  ingress:
    enabled: true
    ingressClassName: "nginx"
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
    hosts:
      - host: loki-gateway.kkloud.nl
        paths:
          - path: /
            pathType: Prefix
    tls: []
      # - secretName: loki-gateway-tls
      #   hosts:
      #     - loki-gateway.kkloud.nl

write:
  replicas: 3
  resources: {}
  persistence:
    size: 1Gi
    storageClass: "ceph-block"
  extraEnvFrom:
    - secretRef:
        name: s3-credentials
  extraArgs:
    - -config.expand-env=true

read:
  replicas: 3
  resources: {}
  persistence:
    size: 1Gi
    storageClass: "ceph-block"
  extraEnvFrom:
    - secretRef:
        name: s3-credentials
  extraArgs:
    - -config.expand-env=true

backend:
  replicas: 3
  resources: {}
  persistence:
    size: 1Gi
    storageClass: "ceph-block"
  extraEnvFrom:
    - secretRef:
        name: s3-credentials
  extraArgs:
    - -config.expand-env=true

#####

resultsCache:
  enabled: false
chunksCache:
  enabled: false

test:
  enabled: false
lokiCanary:
  enabled: false

singleBinary:
  replicas: 0

ingester:
  replicas: 0
querier:
  replicas: 0
queryFrontend:
  replicas: 0
queryScheduler:
  replicas: 0
distributor:
  replicas: 0
compactor:
  replicas: 0
indexGateway:
  replicas: 0
bloomCompactor:
  replicas: 0
bloomGateway:
  replicas: 0 